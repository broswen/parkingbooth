service: parkingbooth
frameworkVersion: "2"

plugins:
  - serverless-step-functions
  - serverless-offline

provider:
  name: aws
  memorySize: 128
  timeout: 3
  runtime: go1.x
  lambdaHashingVersion: 20201221

  stage: ${opt:stage, 'dev'}

  region: us-east-1

  apiGateway:
    apiKeys:
      - testkey

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
          Resource:
            - !GetAtt TicketTable.Arn
        - Effect: "Allow"
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
          Resource:
            - !GetAtt LocationTable.Arn
        - Effect: "Allow"
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
          Resource:
            - !GetAtt AccountTable.Arn

  environment:
    TICKETBUCKET: !Ref TicketEventBucket
    ACCOUNTBUCKET: !Ref AccountEventBucket
    TICKETTABLE: !Ref TicketTable
    LOCATIONTABLE: !Ref LocationTable
    ACCOUNTTABLE: !Ref AccountTable

package:
  patterns:
    - "!./**"
    - ./bin/**

functions:
  generateTicket:
    handler: bin/generate-ticket
    reservedConcurrency: 1
    events:
      - http:
          path: /ticket/in
          method: post

  completeTicket:
    handler: bin/complete-ticket
    reservedConcurrency: 1
    events:
      - http:
          path: /ticket/out
          method: post

  payTicket:
    handler: bin/pay-ticket
    reservedConcurrency: 1
    events:
      - http:
          path: /ticket/pay
          method: post

  processEvents:
    handler: bin/process-events
    reservedConcurrency: 1
    timeout: 60

resources:
  - ${file(./cfn-resources/s3-resources.yaml)}
  - ${file(./cfn-resources/ddb-resources.yaml)}
  - ${file(./cfn-resources/kinesis-resources.yaml)}
  - ${file(./cfn-resources/iam-resources.yaml)}
