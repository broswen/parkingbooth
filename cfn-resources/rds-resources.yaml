Resources:
  postgresSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      SubnetIds: ${file(serverless.${self:provider.stage}.yml):subnets}
      DBSubnetGroupDescription: postgres subnets

  postgresSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        SecretStringTemplate: '{"username": "postgres"}'
        GenerateStringKey: password
        PasswordLength: 16
        ExcludeCharacters: "\"'@/\\"

  postgresSecretAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref postgresSecret
      TargetId: !Ref postgres
      TargetType: AWS::RDS::DBInstance

  postgres:
    Type: AWS::RDS::DBCluster
    Properties:
      AllocatedStorage: "20"
      DBInstanceClass: db.t3.micro
      DBSubnetGroupName: !Ref postgresSubnetGroup
      Engine: aurora-postgres
      EngineMode: serverless
      ScalingConfiguration:
        Autopause: true
        SecondsUntilAutoPause: 300
        MaxCapacity: 2
        MinCapacity: 2
      EnableHttpEndpoint: true
      MasterUsername:
        !Join [
          "",
          [
            "{{resolve:secretsmanager:",
            !Ref postgresSecret,
            ":SecretString:username}}",
          ],
        ]
      MasterUserPassword:
        !Join [
          "",
          [
            "{{resolve:secretsmanager:",
            !Ref postgresSecret,
            ":SecretString:password}}",
          ],
        ]
      MultiAZ: false
      Port: "5432"
      VPCSecurityGroups:
        - !Ref postgresSecurityGroup
